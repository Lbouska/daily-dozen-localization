//
//  StringsProcessor.swift
//  AppLocalizerLib
//
//

import Foundation

// File format as generated by xliff import
// 1. no header line(s)
// 2. always has a note comment line
// 3. keys are in alphabetical order
// 4. empty string "" source & target values have xml representation: `<source/><target/>` 
// 5. always a blank line between each note/key-value pair
//
// ```
// /* <note goes inside comment syntax> */
// "keyIsQuoted"="valueIsQuoted";
// <blank line>
// /* (No Comment) */
// "key"="value";
// 
// ```

struct StringsProcessor {
    
    struct StringsRecord {
        var key: String
        var value: String
        var note: String        
    }
    
    var stringsRecordList = [StringsRecord]()
    
    init(tsv: [TsvRow], useBaseValues: Bool = false) {
        for r in tsv {
            if r.key_apple.isEmpty == false {
                let value = useBaseValues ? r.base_value : r.lang_value 
                stringsRecordList.append(StringsRecord(key: r.key_apple, value: value, note: r.comments))
            }
        }
    }
    
    func parse(url: URL) {
        let lines = [String]()
        for var l in lines {
            l = l.trimmingCharacters(in: CharacterSet.whitespaces)
            if l.hasPrefix("\\*") && l.hasSuffix("*/") {
                // :NYI:
            }
        }
    }
    
    //
    
    func toString() -> String {
        var s = ""
        for r in stringsRecordList {
            let note = r.note.isEmpty ? "(no comment)" : r.note
            s.append("/* \(note) */\n")
            s.append("\(r.key) \(r.value)\n")
        }
        
        return s
    }
    
    
    // 
    
}
