//
//  StringzProcessor.swift
//  AppLocalizerLib
//
//

import Foundation

// File format as generated by xliff import
// 1. no header line(s)
// 2. always has a note comment line
// 3. keys are in alphabetical order
// 4. empty string "" source & target values have xml representation: `<source/><target/>` 
// 5. always a blank line between each note/key-value pair
//
// ```
// /* <note goes inside comment syntax> */
// "keyIsQuoted"="valueIsQuoted";
// <blank line>
// /* (No Comment) */
// "key"="value";
// 
// ```

struct StringzProcessor: TsvProtocol {

    var tsvRowList = TsvRowList()
    
    init() {}
    
    init(tsvRowList: TsvRowList) {
        self.tsvRowList = tsvRowList
    }
    
    
    func parse(url: URL) {
        let lines = [String]()
        for var l in lines {
            l = l.trimmingCharacters(in: CharacterSet.whitespaces)
            if l.hasPrefix("\\*") && l.hasSuffix("*/") {
                // :NYI:
            }
        }
    }
    
    // MARK: - Operations

    // MARK: - Output

    func toString() -> String {
        var s = ""
        let sortedList = tsvRowList.sorted()
        for row in sortedList.data {
            let comment = row.base_note
            let key = row.key_apple
            let value = row.lang_value
            
            s.append("/* \(comment) */\n")
            s.append("\"\(key)\"=\"\(value)\";\n")
            s.append("\n")
        }
        s.append("/* file end */\n")
        s.append("\n")
        return s
    }
    
}
